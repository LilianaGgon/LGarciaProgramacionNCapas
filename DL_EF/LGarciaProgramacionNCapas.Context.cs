//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LGarciaProgramacionNCapasEntities : DbContext
    {
        public LGarciaProgramacionNCapasEntities()
            : base("name=LGarciaProgramacionNCapasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Rol> Rols { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Colonia> Colonias { get; set; }
        public virtual DbSet<Estado> Estadoes { get; set; }
        public virtual DbSet<Municipio> Municipios { get; set; }
        public virtual DbSet<Direccion> Direccions { get; set; }
        public virtual DbSet<BolsaTrabajo> BolsaTrabajoes { get; set; }
        public virtual DbSet<Candidato> Candidatoes { get; set; }
        public virtual DbSet<Carrera> Carreras { get; set; }
        public virtual DbSet<EstatusVacante> EstatusVacantes { get; set; }
        public virtual DbSet<Universidad> Universidads { get; set; }
        public virtual DbSet<Vacante> Vacantes { get; set; }
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<EstatusCita> EstatusCitas { get; set; }
        public virtual DbSet<Piso> Pisoes { get; set; }
        public virtual DbSet<Empresa> Empresas { get; set; }
    
        public virtual int CambiarEstatus(Nullable<int> idUsuario, Nullable<bool> estatus)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstatus", idUsuarioParameter, estatusParameter);
        }
    
        public virtual ObjectResult<ColoniaGetByIdMunicipio_Result> ColoniaGetByIdMunicipio(Nullable<int> idMunicipio)
        {
            var idMunicipioParameter = idMunicipio.HasValue ?
                new ObjectParameter("IdMunicipio", idMunicipio) :
                new ObjectParameter("IdMunicipio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ColoniaGetByIdMunicipio_Result>("ColoniaGetByIdMunicipio", idMunicipioParameter);
        }
    
        public virtual ObjectResult<MunicipioGetByIdEstado_Result> MunicipioGetByIdEstado(Nullable<int> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MunicipioGetByIdEstado_Result>("MunicipioGetByIdEstado", idEstadoParameter);
        }
    
        public virtual int UsuarioDireccioDelete(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioDireccioDelete", idUsuarioParameter);
        }
    
        public virtual int ColoniaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ColoniaGetAll");
        }
    
        public virtual ObjectResult<UsuarioGetAllBusquedaAbierta_Result> UsuarioGetAllBusquedaAbierta(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idRol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioGetAllBusquedaAbierta_Result>("UsuarioGetAllBusquedaAbierta", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idRolParameter);
        }
    
        public virtual ObjectResult<EstadoGetAll_Result> EstadoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EstadoGetAll_Result>("EstadoGetAll");
        }
    
        public virtual ObjectResult<UsuarioGetById_Result> UsuarioGetById(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioGetById_Result>("UsuarioGetById", idUsuarioParameter);
        }
    
        public virtual ObjectResult<DireccionGetByIdUsuario_Result1> DireccionGetByIdUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DireccionGetByIdUsuario_Result1>("DireccionGetByIdUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<UsuarioGetAllViewBusquedaAbierta_Result> UsuarioGetAllViewBusquedaAbierta(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idRol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioGetAllViewBusquedaAbierta_Result>("UsuarioGetAllViewBusquedaAbierta", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idRolParameter);
        }
    
        public virtual int UsuarioDireccionAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string celular, string userName, string email, string password, Nullable<System.DateTime> fechaNacimiento, string sexo, string telefono, string cURP, Nullable<int> idRol, string calle, string numeroInterior, string numeroExterior, Nullable<int> idColonia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var cURPParameter = cURP != null ?
                new ObjectParameter("CURP", cURP) :
                new ObjectParameter("CURP", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("IdColonia", idColonia) :
                new ObjectParameter("IdColonia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioDireccionAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, celularParameter, userNameParameter, emailParameter, passwordParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, cURPParameter, idRolParameter, calleParameter, numeroInteriorParameter, numeroExteriorParameter, idColoniaParameter);
        }
    
        public virtual int UsuarioDireccioUpdate(Nullable<int> idUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, string celular, string userName, string email, string password, Nullable<System.DateTime> fechaNacimiento, string sexo, string telefono, Nullable<bool> estatus, string cURP, Nullable<int> idRol, string calle, string numeroInterior, string numeroExterior, Nullable<int> idColonia)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(bool));
    
            var cURPParameter = cURP != null ?
                new ObjectParameter("CURP", cURP) :
                new ObjectParameter("CURP", typeof(string));

            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));

            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("IdColonia", idColonia) :
                new ObjectParameter("IdColonia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioDireccioUpdate", idUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, celularParameter, userNameParameter, emailParameter, passwordParameter, fechaNacimientoParameter, sexoParameter, telefonoParameter, estatusParameter, cURPParameter, idRolParameter, calleParameter, numeroInteriorParameter, numeroExteriorParameter, idColoniaParameter);
        }
    
        public virtual int CandidatoAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string edad, string correo, string telefono, string direccion, byte[] foto, byte[] curriculum, Nullable<int> idUniversidad, Nullable<int> idCarrera, Nullable<int> idBolsaTrabajo, Nullable<int> idVacante)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var edadParameter = edad != null ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            var curriculumParameter = curriculum != null ?
                new ObjectParameter("Curriculum", curriculum) :
                new ObjectParameter("Curriculum", typeof(byte[]));
    
            var idUniversidadParameter = idUniversidad.HasValue ?
                new ObjectParameter("IdUniversidad", idUniversidad) :
                new ObjectParameter("IdUniversidad", typeof(int));
    
            var idCarreraParameter = idCarrera.HasValue ?
                new ObjectParameter("IdCarrera", idCarrera) :
                new ObjectParameter("IdCarrera", typeof(int));
    
            var idBolsaTrabajoParameter = idBolsaTrabajo.HasValue ?
                new ObjectParameter("IdBolsaTrabajo", idBolsaTrabajo) :
                new ObjectParameter("IdBolsaTrabajo", typeof(int));
    
            var idVacanteParameter = idVacante.HasValue ?
                new ObjectParameter("IdVacante", idVacante) :
                new ObjectParameter("IdVacante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidatoAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, edadParameter, correoParameter, telefonoParameter, direccionParameter, fotoParameter, curriculumParameter, idUniversidadParameter, idCarreraParameter, idBolsaTrabajoParameter, idVacanteParameter);
        }
    
        public virtual int CandidatoDelete(Nullable<int> idCandidato)
        {
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidatoDelete", idCandidatoParameter);
        }
    
        public virtual ObjectResult<CandidatoGetById_Result> CandidatoGetById(Nullable<int> idCandidato)
        {
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CandidatoGetById_Result>("CandidatoGetById", idCandidatoParameter);
        }
    
        public virtual int CandidatoUpdate(Nullable<int> idCandidato, string nombre, string apellidoPaterno, string apellidoMaterno, string edad, string correo, string telefono, string direccion, byte[] foto, byte[] curriculum, Nullable<int> idUniversidad, Nullable<int> idCarrera, Nullable<int> idBolsaTrabajo, Nullable<int> idVacante)
        {
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var edadParameter = edad != null ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            var curriculumParameter = curriculum != null ?
                new ObjectParameter("Curriculum", curriculum) :
                new ObjectParameter("Curriculum", typeof(byte[]));
    
            var idUniversidadParameter = idUniversidad.HasValue ?
                new ObjectParameter("IdUniversidad", idUniversidad) :
                new ObjectParameter("IdUniversidad", typeof(int));
    
            var idCarreraParameter = idCarrera.HasValue ?
                new ObjectParameter("IdCarrera", idCarrera) :
                new ObjectParameter("IdCarrera", typeof(int));
    
            var idBolsaTrabajoParameter = idBolsaTrabajo.HasValue ?
                new ObjectParameter("IdBolsaTrabajo", idBolsaTrabajo) :
                new ObjectParameter("IdBolsaTrabajo", typeof(int));
    
            var idVacanteParameter = idVacante.HasValue ?
                new ObjectParameter("IdVacante", idVacante) :
                new ObjectParameter("IdVacante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidatoUpdate", idCandidatoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, edadParameter, correoParameter, telefonoParameter, direccionParameter, fotoParameter, curriculumParameter, idUniversidadParameter, idCarreraParameter, idBolsaTrabajoParameter, idVacanteParameter);
        }
    
        public virtual ObjectResult<UniversidadGetAll_Result> UniversidadGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UniversidadGetAll_Result>("UniversidadGetAll");
        }
    
        public virtual ObjectResult<BolsaTrabajoGetAll_Result> BolsaTrabajoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BolsaTrabajoGetAll_Result>("BolsaTrabajoGetAll");
        }
    
        public virtual ObjectResult<CarreraGetAll_Result> CarreraGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarreraGetAll_Result>("CarreraGetAll");
        }
    
        public virtual ObjectResult<VacanteGetAll_Result> VacanteGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VacanteGetAll_Result>("VacanteGetAll");
        }
    
        public virtual ObjectResult<CandidatoBusquedaAbierta_Result> CandidatoBusquedaAbierta(Nullable<int> idVacante)
        {
            var idVacanteParameter = idVacante.HasValue ?
                new ObjectParameter("IdVacante", idVacante) :
                new ObjectParameter("IdVacante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CandidatoBusquedaAbierta_Result>("CandidatoBusquedaAbierta", idVacanteParameter);
        }
    
        public virtual ObjectResult<CandidatoGetAll_Result> CandidatoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CandidatoGetAll_Result>("CandidatoGetAll");
        }
    }
}
