@model ML.Usuario
@*Se cacha el modelo de usuario*@

@{
    ViewBag.Title = "GetAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />

<h2>Usuarios</h2>


<div class="container text-center">

    <div class="accordion accordion-flush" id="accordionFlushExample">
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                    Busqueda Abierta
                </button>
            </h2>
            <div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                <div class="accordion-body">
                    @using (Html.BeginForm("GetAll", "Usuario", FormMethod.Post))
                    {
                        <div class="row align-items-center">
                            <div class="col">
                                @Html.LabelFor(model => model.Nombre, new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                            </div>
                            <div class="col">
                                @Html.LabelFor(model => model.ApellidoPaterno, new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" })
                            </div>
                            <div class="col">
                                @Html.LabelFor(model => model.ApellidoMaterno, new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })
                            </div>
                            <div class="col">
                                @Html.Label("Rol", new { @class = "form-label" })
                                @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona un rol", new { @class = "form-select" })
                            </div>
                            <div class="col align-text-bottom">
                                <button type="submit" class="btn btn-outline-success">Buscar</button>
                            </div>
                        </div>

                        <div class="row">
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>


    @*Condicion de vista de la tabla de usuarios*@
    @if (Model.Usuarios.Count > 0)
    {
        <div class="row">
            <div class="col">
                <div class="table-responsive">
                    <a href="@Url.Action("Form", "Usuario")" class="btn btn-success">
                        <i class="bi bi-person-fill-add"></i>
                    </a>
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th scope="col">Editar</th>
                                <th scope="col">Imagen</th>
                                <th scope="col">Nombre</th>
                                <th scope="col">Celular</th>
                                <th scope="col">UserName</th>
                                <th scope="col">Email</th>
                                <th scope="col">Password</th>
                                <th scope="col">Fecha de Nacimiento</th>
                                <th scope="col">Sexo</th>
                                <th scope="col">Telefono</th>
                                <th scope="col">Estatus</th>
                                <th scope="col">CURP</th>
                                <th scope="col">Id Rol</th>
                                <th scope="col">Dirección</th>
                                <th scope="col">Eliminar</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*Para cada usuario en el modelo usuarios*@
                            @foreach (ML.Usuario usuario in Model.Usuarios)
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("Form", "Usuario", new { IdUsuario = usuario.IdUsuario })" class="btn btn-warning">
                                            <i class="bi-pencil-fill bi-pencil-fill"></i>
                                        </a>
                                    </td>
                                    <td>
                                        @if (usuario.Imagen != null && usuario.Imagen.Length > 0)
                                        {
                                            <div class="col-6">
                                                <img src="data:image/*;base64,@Convert.ToBase64String(usuario.Imagen)" width="70" height="70" />
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="col-6">
                                                <img id="imgUsuario" src="https://media.istockphoto.com/id/1473534533/es/vector/avatar-de-imagen-de-perfil-predeterminado-icono-de-avatar-de-usuario-icono-de-persona-icono.jpg?s=612x612&w=0&k=20&c=pxEpFr5yhE4zLcev7LFRFS2uHoe29fq_JKQ3RsRAmlU=" width="70" height="70" />
                                            </div>
                                        }
                                    </td>
                                    <td>@($"{usuario.Nombre} {usuario.ApellidoPaterno} {usuario.ApellidoMaterno}")</td>
                                    <td>@usuario.Celular</td>
                                    <td>@usuario.UserName</td>
                                    <td>@usuario.Email</td>
                                    <td>@usuario.Password</td>
                                    <td>@usuario.FechaNacimiento</td>
                                    <td>@usuario.Sexo</td>
                                    <td>@usuario.Telefono</td>
                                    <td>
                                        @if (usuario.Estatus)
                                        {
                                            <div class="form-check form-switch">
                                                @*Inicializa el switch en 0/blanco/desactivado y escucha cuando se cambia el estado*@
                                                <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" checked onchange="CambiarEstatus(@usuario.IdUsuario, this)">
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-check form-switch">
                                                @*Inicializa en el estado guardado y escucha cuando se cambia el estado *@
                                                <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" onchange="CambiarEstatus(@usuario.IdUsuario, this)">
                                            </div>
                                        }
                                    </td>
                                    <td>@usuario.CURP</td>
                                    <td>@usuario.Rol.Nombre</td>

                                    <td>@($"Calle {usuario.Direccion.Calle}, No.Int. {usuario.Direccion.NumeroInterior}, No.Ext.{usuario.Direccion.NumeroExterior}, Col. {usuario.Direccion.Colonia.Nombre}, {usuario.Direccion.Colonia.Municipio.Nombre}, {usuario.Direccion.Colonia.Municipio.Estado.Nombre}")</td>
                                    <td>
                                        <a href="@Url.Action("Delete", "Usuario", new { IdUsuario = usuario.IdUsuario })" class="btn btn-danger" onclick="return confirm('¿Eliminar registro?')">
                                            <i class="bi-pencil-fill bi-trash2-fill"></i>
                                        </a>
                                    </td>


                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

<script src="~/Scripts/jquery-3.4.1.js"></script> @*Version de jquery que va a usar*@
<script>
 //Inicio del script
    function CambiarEstatus(IdUsuario, input) //Funcion llamada CambiarEstatus que recibe los parametros IdMateria e input
    {
        let estatus = input.checked //Variable "temporal" recibe una extension de la accion del input
        $.ajax({ //Se indica que se va a implementar ajax
            url: "@Url.Action("CambiarEstatus", "Usuario")", //Ruta relativa del metodo al que debe entrar (Nombre metodo, controlador)
            dataType: "json", //Que va a devolver
            type: "POST", //Tipo de metodo que va a usar (Get/Delete/Post/Put)
            data: { IdUsuario: IdUsuario, estatus: estatus }, //Datos que se le van a asignar en el json
            success: function (result) { //La funcion recibe como parametro un result. Success devuelve exito de jquery. Se comunicó bien con el metodo del controlador
                if (result.Correct) {
                } else {
                    alert("Hubo un error")
                }
            },
            error: function (xhr) {
                //No se comunicó bien con el metodo del controlador
                console.log(xhr)
            }
        })

    }
</script>
@*Fin del script*@

